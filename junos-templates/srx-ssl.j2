{#- SSL proxy #}

{#- zone name per deployment type#}	
{%- if v.get('dep') == "Routed" %}
{%- set zone_in = "Trust" %}
{%- set zone_out = "Untrust" %}
{%- endif %}
{%- if v.get('dep') == "Secure" %}		
{%- set zone_in = "Trust-L1" %}
{%- set zone_out = "Untrust-L1" %}
{%- endif %}	
{%- if v.get('dep') == "Sniffer" %}	
{%- set zone_in = "Sniffer" %}
{%- set zone_out = "Sniffer" %}
{%- endif %}	
	
{%- if v.get('sslfp') == "sslfp_on" %}		
{#- create factice CA otherwise it will not commit because of "trusted-ca all" #}		
security pki ca-profile p1 ca-identity p1;
services ssl proxy profile ssl-inspect trusted-ca all;
services ssl proxy profile ssl-inspect root-ca ssl-ac-poc;
services ssl proxy profile ssl-inspect actions log errors;
{#- SSL bypass for Financial URL category #}
{%- if v.get('bypass_sslfp') == "ssl_bypass_on" %}
services ssl proxy profile ssl-inspect whitelist-url-categories Enhanced_Financial_Data_and_Services;
{%- if v.get('ewf') == "EWF_LO" or v.get('ewf') == "EWF_OFF" %}
security utm default-configuration web-filtering type juniper-enhanced;
security utm feature-profile web-filtering juniper-enhanced profile ewf-fake-sslfp default permit;
{%- if v.get('avv') == "AVV_OFF" and v.get('aspam') == "AS_OFF" %}
security utm utm-policy utm-wf-fake web-filtering http-profile ewf-fake-sslfp;
security policies from-zone {{ zone_in }} to-zone {{ zone_out }} policy outbound then permit application-services utm-policy utm-wf-fake;
{%- endif %}
{%- if v.get('avv') == "AVV_SOPHOS" or v.get('aspam') == "AS_ON" %}
security utm utm-policy UTM-Policy web-filtering http-profile ewf-fake-sslfp;
security policies from-zone {{ zone_in }} to-zone {{ zone_out }} policy outbound then permit application-services utm-policy UTM-Policy;
{%- endif %}
{%- endif %}
{%- endif %}
{#- apply on outbound traffic #}	
security policies from-zone {{ zone_in }} to-zone {{ zone_out }} policy outbound then permit application-services ssl-proxy profile-name ssl-inspect;
{%- endif %}
